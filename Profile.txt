import 'dart:math';

import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import 'package:timesheet_app/Model/Employee.dart';
import 'package:timesheet_app/Views/timesheet_approval.dart';

import '../main.dart';
import 'Data.dart';

class ProfilePage extends StatefulWidget {
  final username;
  final password;
  ProfilePage({this.username, this.password});
  @override
  _ProfilePageState createState() =>
      _ProfilePageState(username: username, password: password);
}

class _ProfilePageState extends State<ProfilePage> {
  final username;
  final password;
  _ProfilePageState({this.username, this.password});
  String formatDate(DateTime date) {
    return new DateFormat.yMMMMd().format(date);
  }

  final List<Color> circleColors = [Colors.red, Colors.grey, Colors.green];
  Color randomGenerator() {
    return circleColors[new Random().nextInt(2)];
  }

  Future<Null> getRefresh() async {
    await Future.delayed(Duration(seconds: 3));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          automaticallyImplyLeading: false,
          title: Row(children: <Widget>[
            SizedBox(width: 50.0),
            Text('Timesheet Approval'),
          ]),
          actions: <Widget>[
            IconButton(
              icon: Icon(
                Icons.person,
                color: Colors.white,
                size: 25.0,
              ),
              tooltip: username,
            ),
            IconButton(
                icon: Icon(Icons.exit_to_app),
                onPressed: () {
                  Navigator.push(context,
                      MaterialPageRoute(builder: (context) => Login()));
                }),
          ],
        ),
        body: RefreshIndicator(
          onRefresh: getRefresh,
          child: GridView.builder(
              scrollDirection: Axis.vertical,
              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                crossAxisCount: 2,
              ),
              itemCount: Data().empdata.length,
              itemBuilder: (BuildContext context, int i) {
                var data = Data().empdata[i];
                return Container(
                  child: Card(
//                    color: randomGenerator(),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(20.0),
                    ),
                    elevation: 10.0,
                    margin: EdgeInsets.all(7.0),
                    child: ListTile(
                      title: Row(
                          mainAxisAlignment: MainAxisAlignment.spaceAround,
                          children: <Widget>[
                            Text(data['id']),
                            Card(
                                color: Colors.deepOrange,
                                shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(15.0),
                                ),
                                child: Padding(
                                  padding: const EdgeInsets.all(8.0),
                                  child: Text(
                                    " C ",
                                    style: TextStyle(
                                        fontSize: 15.0,
                                        color: Colors.white,
                                        fontWeight: FontWeight.bold),
                                  ),
                                )),
                          ]),
                      subtitle: Row(children: <Widget>[
                        Column(children: <Widget>[
                          Container(
                              height: 50.0,
                              width: 30.0,
                              child: Image.asset('images/time_pending.png')),
                        ]),
                        SizedBox(
                          width: 10.0,
                        ),
                        Column(
                            mainAxisAlignment: MainAxisAlignment.start,
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: <Widget>[
                              Row(children: <Widget>[
                                Text(data['ResourceName']),
                              ]),
                              Row(children: <Widget>[
                                Text(data['ProjectName'],
                                    style: TextStyle(color: Colors.green))
                              ]),
                              Row(children: <Widget>[
                                Text(
                                    formatDate(data['dates'][0]['date']) +
                                        "-\n" +
                                        formatDate(data['dates'][4]['date']),
                                    style: TextStyle(color: Colors.blue))
                              ]),
                            ]),
                      ]),
                      onTap: () {
                        Navigator.push(
                            context,
                            new MaterialPageRoute(
                                builder: (context) => Timesheet(
                                      empdata: Data().empdata[i],
                                    )));
                      },
                    ),
                  ),
                );
              }),
        ));
  }
}
